import{notEqual as r,match as t}from"assert";import{isAbsolute as e,resolve as n}from"path";import{existsSync as o}from"fs";import{readFile as i}from"fs/promises";import{createRequire as a}from"module";function c(r,t){(null==t||t>r.length)&&(t=r.length);for(var e=0,n=new Array(t);e<t;e++)n[e]=r[e];return n}function u(r,t){var e="undefined"!=typeof Symbol&&r[Symbol.iterator]||r["@@iterator"];if(e)return(e=e.call(r)).next.bind(e);if(Array.isArray(r)||(e=function(r,t){if(r){if("string"==typeof r)return c(r,t);var e=Object.prototype.toString.call(r).slice(8,-1);return"Object"===e&&r.constructor&&(e=r.constructor.name),"Map"===e||"Set"===e?Array.from(r):"Arguments"===e||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(e)?c(r,t):void 0}}(r))||t&&r&&"number"==typeof r.length){e&&(r=e);var n=0;return function(){return n>=r.length?{done:!0}:{done:!1,value:r[n++]}}}throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}var f=JSON.parse;function s(){function r(r){return r instanceof Array}function t(r){return null!==r&&"object"==typeof r&&"constructor"in r&&r.constructor==Object}var e,n,o,i,a,c=!1,u=arguments[0]||{},f=1,l=!1,m=arguments.length;for("boolean"==typeof u&&(l=u,u=arguments[f]||{},f++),"object"!=typeof u&&("function"!=typeof(a=u)||a.constructor!==Function)&&(u={}),f===m&&(u=this,f--);f<m;f++)if(null!=(e=arguments[f]))for(var v in e)n=u[v],u!==(o=e[v])&&(l&&o&&(t(o)||(c=r(o)))?(c?i=n&&t(n)?n:{}:(c=!1,i=n&&r(n)?n:[]),u[v]=s(l,i,o)):void 0!==o&&(u[v]=o));return u}var l=function(r,t){try{return Promise.resolve(Promise.all(r.map(function(r){return m(r,t)}))).then(function(r){return s.apply(void 0,r)})}catch(r){return Promise.reject(r)}},m=function(e,n){try{r(e,void 0,"Path can't be undefined"),r(e,null,"Path can't be null"),r(e,"","Path can't be empty"),t(e,/.?\..?/,"Path needs to have SOME extension");for(var o,i=new Map,a=u(v);!(o=a()).done;){var c=o.value;p(c[0],c[1],i)}if(n)for(var f,s=u(n);!(f=s()).done;){var l=f.value;p(l[0],l[1],i)}var m=e.split(".").at(-1);if(m&&i.has(m)){var h=i.get(m);return Promise.resolve(h(e))}throw new RangeError("Unknown config file type: "+m)}catch(r){return Promise.reject(r)}},v=[["json",function(r){try{return e(r)||(r=n(process.cwd(),r)),Promise.resolve(function(){if(o(r))return function(t,e){try{var n=Promise.resolve(i(r,"utf-8")).then(f)}catch(r){return e(r)}return n&&n.then?n.then(void 0,e):n}(0,function(t){if(t instanceof Error){if(!0===t.message.includes("JSON"))throw new RangeError('JSON in "'+r+'" is invalid');throw new RangeError("Can't read JSON config from \""+r+'"')}});throw new Error("Config file not found in "+r)}())}catch(r){return Promise.reject(r)}}],[["js","mjs"],function(r){try{e(r)||(r=n(process.cwd(),r));var t=a(import.meta.url)(r);return Promise.resolve(t instanceof Function?t():t)}catch(r){return Promise.reject(r)}}]];function p(r,t,e){Array.isArray(r)?r.forEach(function(r){return e.set(r,t)}):e.set(r,t)}export{m as arrange,l as arrangeMany};
//# sourceMappingURL=index.mjs.map
